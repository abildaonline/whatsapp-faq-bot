const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');
const faq = require('./config/settings');  // –í–æ—Ç —ç—Ç–æ –¥–æ–±–∞–≤—å –≤ –Ω–∞—á–∞–ª–µ

const client = new Client({
    authStrategy: new LocalAuth()
});

client.on('qr', qr => {
    qrcode.generate(qr, { small: true });
});

client.on('ready', () => {
    console.log('FAQ_Bot –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!');
});

// –í–æ—Ç —Å—é–¥–∞, –Ω–∏–∂–µ, –≤—Å—Ç–∞–≤–ª—è–µ—à—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–π —è —Ç–µ–±–µ —Å–∫–∏–Ω—É–ª
client.on('message', async msg => {
    if (msg.body.startsWith('!faq')) {
        const query = msg.body.replace('!faq', '').trim().toLowerCase();

        if (!query) {
            let response = 'üìö –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:\n\n';
            faq.forEach((item, index) => {
                response += `${index + 1}. ${item.question}\n`;
            });
            response += '\n–ù–∞–ø–∏—à–∏—Ç–µ `!faq –í–û–ü–†–û–°` —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç.';
            msg.reply(response);
        } else {
            const found = faq.find(item => item.question.toLowerCase() === query);
            if (found) {
                msg.reply(`‚ÑπÔ∏è ${found.answer}`);
            } else {
                msg.reply('‚ùì –í–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞–ø–∏—à–∏—Ç–µ !faq —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.');
            }
        }
    }
});

client.initialize();
